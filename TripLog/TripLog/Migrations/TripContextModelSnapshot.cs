// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripLog.Models;

namespace TripLog.Migrations
{
    [DbContext(typeof(TripContext))]
    partial class TripContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("TripLog.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Accomodation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccomodationEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccomodationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThingsToDo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingsToDo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingsToDo3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            TripId = 1,
                            Accomodation = "Hotel Blitz",
                            AccomodationEmail = "Bliz@blitz.blitz",
                            AccomodationPhone = "123-123-1234",
                            Destination = "Honolulu",
                            EndDate = new DateTime(2022, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThingsToDo1 = "Check the Feifel Tower"
                        },
                        new
                        {
                            TripId = 2,
                            Accomodation = "Hotel Bungalo",
                            AccomodationEmail = "Bungalo@Bungalo.com",
                            AccomodationPhone = "333-333-4444",
                            Destination = "Las Vegas",
                            EndDate = new DateTime(2021, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThingsToDo1 = "Visit the desert",
                            ThingsToDo2 = "Sleep as much as you can",
                            ThingsToDo3 = "Play black jack"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
